% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derived_variable_helpers.R
\name{derive.rank.normal.transform}
\alias{derive.rank.normal.transform}
\title{Apply inverse/rank normal transformation to numeric variable}
\usage{
derive.rank.normal.transform(
  variable,
  offset = 0.5,
  stratification.vars = list(),
  include.subjects = NA,
  primary.call = TRUE
)
}
\arguments{
\item{variable}{numeric vector, input variable
for transformation; using tidyverse masking, this can be
referred to by the name of a variable in the input config}

\item{offset}{numeric, small decimal offset for transform
adjustment}

\item{stratification.vars}{list, input variables to be used
as factors for stratifying data before applying inverse
normal transform; using tidyverse masking, these can be
referred to by the names of variables in the input config}

\item{include.subjects}{logical vector or NA, indicator vector for
which subjects should be considered for current transformation}

\item{primary.call}{logical, whether this is the top-level
call of this function. do not set or change this, unless you want really
awful behavior}
}
\description{
The outcome of this transformation is guaranteed to be normal,
but may not behave as you want it to. Parametric information
about the variable is lost. Ties are resolved by random resolution,
which has desirable statistical properties but which breaks down
(as do all methods) as the number of ties increases relative to
the sample size. Multiple transformations result in different
variables, with the extent of the differences again dependent
on the number of ties.
}
\details{
Transforms a numeric vector to a normally distributed variable
with certain configurable settings.
}
