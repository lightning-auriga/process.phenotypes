% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derived_variable_helpers.R
\name{derive.first.degree}
\alias{derive.first.degree}
\title{Derive binary yes/no first-degree relatives from family member data.}
\usage{
derive.first.degree(variable.name)
}
\arguments{
\item{variable.name}{Character vector to be parsed.
This function is intended to be called from the \code{derived} variable
block of a dataset configuration file, in which case the mapping keys
under \code{variables} and \code{derived} (e.g. HW00001) can be called directly.}
}
\value{
Character vector of yes/no responses indicating whether the
input vector implicated a first degree relationship.
}
\description{
This logic converts family member lists to a binary variable indicating
whether or not first degree relatives are affected.

Note that the input vectors are specified as \emph{names of variables}
within the input phenotype dataset. At the time the dependencies
are evaluated, the phenotype dataset has had the user-configured
variable names applied as its column headers, and as such the
variables should be referred to by those labels directly.
}
\details{
This helper function allows one to convert variables that are
lists of family members (e.g. "father,mother,grandmother") to
a yes/no variable that simply reports whether first degree
relatives are included in the list.  We are assuming that the
level of granularity required for downstream analysis is more
along the lines of whether or not first-degree relations are
affected.
}
\examples{
data <- c("mother", "grandfather", "child", "stepbrother", NA)
phenotype.data <- data.frame(HW00001 = data)
der.var <- derive.first.degree(phenotype.data$HW00001)
## this function is designed as a utility to be
## deployed in the dependency block of a user configuration
## file. it requires the bindings of the phenotype data
## matrix to be available in the current context
\dontrun{
derive.first.degree(HW00001)
}
## expected: TRUE FALSE TRUE FALSE FALSE
}
\seealso{
create.derived.variables
}
