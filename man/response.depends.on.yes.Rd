% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dependency_helper_functions.R
\name{response.depends.on.yes}
\alias{response.depends.on.yes}
\title{Test dependency of one variable on "yes" response of another}
\usage{
response.depends.on.yes(
  dependent.variable,
  independent.variable,
  yes.aliases = c("yes"),
  independent.na.aliases = character(),
  dependent.na.aliases = character()
)
}
\arguments{
\item{dependent.variable}{Character vector name of dependent/upstream variable to operate on
within the package's representation of the input phenotype data.}

\item{independent.variable}{Character vector name of independent/downstream variable to operate on
within the package's representation of the input phenotype data.}

\item{yes.aliases}{Character vector values to be interpreted as \code{yes}
in the independent variable.}

\item{independent.na.aliases}{Character vector alternative values to be treated
as NAs in the independent variable. For example, depending on the question,
\verb{0 times} or \code{none} could be considered non-response.}

\item{dependent.na.aliases}{Character vector alternative values to be treated
as NAs in the dependent variable. For example, depending on the question,
\code{never} or \code{none} could be considered non-response.}
}
\value{
Logical vector representing the results
of the dependency test between the two provided vectors. Test
represents whether the specified dependency is satisfied.
}
\description{
This is a function designed for use within the user configuration
file, as a convenience to handle structured comparison between
a yes/no style question and its dependent downstream response.
In the formal parameters, \code{dependent} refers to the logically
downstream question, and \code{independent} refers to the upstream
question on which the \code{dependent} question depends.

Note that the input vectors are specified as \emph{names of variables}
within the input phenotype dataset. At the time the dependencies
are evaluated, the phenotype dataset has had the user-configured
variable names applied as its column headers, and as such the
variables should be referred to by those labels directly.
}
\details{
This dependency test assumes the input vectors are factors or character vectors.
Though the function is modeled on the idea of a yes/no response,
the definition of \code{yes} can be expanded in the \code{yes.aliases} parameter.
Thus, this function will also serve if the independent question is,
for example: \verb{How often do you smoke? [daily/sometimes/never]}, and
the response set that triggers the downstream question for respondents
who smoke at least some amount. In this case, setting \code{yes.aliases}
to `c("daily", "sometimes") triggers the correct dependency test.
}
\examples{
indep.var <- c("yes", "sometimes", "no response", "yes", "never")
dep.var <- 0:4
phenotype.data <- data.frame(
  HW00001 = indep.var,
  HW00002 = dep.var
)
## this function is designed as a utility to be
## deployed in the dependency block of a user configuration
## file. it requires the bindings of the phenotype data
## matrix to be available in the current context
\dontrun{
dep.test <- response.depends.on.yes(
  HW00002,
  HW00001,
  c("sometimes"),
  c("no response"),
  c("0")
)
}
## expected: TRUE TRUE FALSE TRUE FALSE
}
\seealso{
response.depends.on.not.na,
response.is.less.than, response.is.greater.than,
response.is.duplicate.of, response.is.computed.bmi,
year.is.consistent.with.age
}
