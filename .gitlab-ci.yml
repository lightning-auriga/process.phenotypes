# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

# derived from https://jozef.io/r106-r-package-gitlab-ci/

stages:
  - check

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

variables:
  _R_CHECK_CRAN_INCOMING_: "false"
  _R_CHECK_FORCE_SUGGESTS_: "true"


run_all:
  stage: check
  image: rocker/tidyverse:latest
  script:
    - apt-get update
    - apt-get install -y wget tar libxt-dev
    - Rscript -e 'install.packages(c("covr", "DT", "openxlsx", "kableExtra", "stringdist", "jsonvalidate", "rjson"), repos = "https://cran.yu.ac.kr/")'
    - Rscript -e 'devtools::build(binary = TRUE)'
    - Rscript -e 'devtools::check(document = FALSE, vignettes = FALSE, args = "--no-tests", error_on = "note")'
    - Rscript -e 'if (any(as.data.frame(devtools::test())[["failed"]] > 0)) stop("Some tests failed.")'
    - Rscript -e 'covr::gitlab(quiet = FALSE) ; cat("total package coverage ", covr::coverage_to_list()$totalcoverage, "\n", sep = "")'
    - Rscript -e 'devtools::install()'
  coverage: '/total package coverage \d+.\d/'
